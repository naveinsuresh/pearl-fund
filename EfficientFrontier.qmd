---
title: "Efficient Frontier"
format: html
editor: visual
---

```{r}
## (1) Define the packages that will be needed
packages <- c('quantmod', 'ggplot2', 'dplyr')

## (2) Install them if not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
  install.packages(packages[!installed_packages])
}

## (3) Load the packages into R session
invisible(lapply(packages, library, character.only = TRUE))
```

```{r}
## Create a character vector that has the stock codes we need
portfolio <- c('AAPL', 'MSFT', 'GOOG', 'AMZN', 'JNJ')

## Load the stocks needed into R 
portfolio <- lapply(portfolio, function(x) {getSymbols(
        x, periodicity='weekly', auto.assign=FALSE)})

## Get adjusted prices of all stocks
portfolio_adjusted <- lapply(portfolio, Ad)

## Transform into xts
portfolio_adjusted <- do.call(merge, portfolio_adjusted)

## View the first few rows
head(portfolio_adjusted)
```

```{r}
## Make a list that contains log weekly returns of each stock
portfolio_adjusted <- lapply(portfolio_adjusted, weeklyReturn, type='log')

## Transform into an xts object
portfolio_adjusted <- do.call(merge, portfolio_adjusted)

## Adjust the column names 
colnames(portfolio_adjusted) <- c('AAPL', 'MSFT', 'GOOG', 'AMZN', 'JNJ')

## Remove first row since these do not have returns
portfolio_adjusted <- portfolio_adjusted[-1]

## View the first few rows of the log returns 
head(portfolio_adjusted)
```

```{r}
## Get variance-covariance matrix
var_covar <- var(portfolio_adjusted)

## Print results
var_covar
```

```{r}
## Set seed for reproducibility
set.seed(123)

## Get 50,000 random uniform numbers
random_numbers <- runif(50000)

## Transform random numbers into matrix to distribute across all symbols
all_weights <- matrix(random_numbers, nrow=10000, ncol=5)

## Add sixth column with just NAs
all_weights <- cbind(all_weights, rep(NA, 10000))

## Add names
colnames(all_weights) <- c('AAPL', 'MSFT', 'GOOG', 'AMZN', 'JNJ', 'total')

## Loop to convert into actual weights
for (i in 1:10000) {
        
        ## Get sum of random numbers in each row
        all_weights[i, 6] <- sum(all_weights[i, 1:5])
        
        ## Get the actual weights of the random numbers
        all_weights[i, 1:5] <- 
                all_weights[i, 1:5] / all_weights[i, 6]
}

## Delete total column
all_weights <- all_weights[, -6]
```

```{r}
## Create column placeholders
portfolio_risk <- rep(NA, 10000)
portfolio_returns <- rep(NA, 10000)

## loop to calculate risk and return per weights 
for (i in 1:10000) {
        weights <- all_weights[i, ]
        portfolio_risk[i] <- sqrt(sum((weights %*% var_covar) * weights))
        portfolio_returns[i] <- sum(weights * var_covar[1, ])
}

## Make a data frame to be used for ggplot2
portfolio_df <- data.frame(portfolio_risk, portfolio_returns)
```

```{r}
portfolio_df %>% 
        ggplot(aes(x=portfolio_risk, y=portfolio_returns)) + 
        geom_point(alpha=0.2) + 
        theme_minimal() +
        labs(
                title='Efficient Frontier graph of 5 assets',
                subtitle='AAPL, MSFT, GOOG, AMZN, JNJ')
```
